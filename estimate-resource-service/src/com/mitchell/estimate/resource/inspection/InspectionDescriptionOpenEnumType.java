//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.03 at 12:33:26 PM PST 
//


package com.mitchell.estimate.resource.inspection;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for InspectionDescriptionOpenEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="InspectionDescriptionOpenEnumType">
 *   &lt;restriction base="{http://www.cieca.com/BMS}OpenEnum">
 *     &lt;enumeration value="Board Up"/>
 *     &lt;enumeration value="Cat Drive In"/>
 *     &lt;enumeration value="CATD"/>
 *     &lt;enumeration value="CATF"/>
 *     &lt;enumeration value="Commercial"/>
 *     &lt;enumeration value="D"/>
 *     &lt;enumeration value="DAP"/>
 *     &lt;enumeration value="Drive In"/>
 *     &lt;enumeration value="DRP"/>
 *     &lt;enumeration value="DRP (Inspect &amp; Repair)"/>
 *     &lt;enumeration value="F"/>
 *     &lt;enumeration value="FIS"/>
 *     &lt;enumeration value="I"/>
 *     &lt;enumeration value="Independent Inspection"/>
 *     &lt;enumeration value="Inspect and Repair with Customer OK"/>
 *     &lt;enumeration value="Inspection Only"/>
 *     &lt;enumeration value="ND"/>
 *     &lt;enumeration value="OR"/>
 *     &lt;enumeration value="Other"/>
 *     &lt;enumeration value="OTHR"/>
 *     &lt;enumeration value="OW"/>
 *     &lt;enumeration value="P"/>
 *     &lt;enumeration value="PRO"/>
 *     &lt;enumeration value="Property"/>
 *     &lt;enumeration value="R"/>
 *     &lt;enumeration value="Rental"/>
 *     &lt;enumeration value="RF"/>
 *     &lt;enumeration value="RSP"/>
 *     &lt;enumeration value="SC"/>
 *     &lt;enumeration value="Staff Inspection"/>
 *     &lt;enumeration value="STF"/>
 *     &lt;enumeration value="TC"/>
 *     &lt;enumeration value="TPA"/>
 *     &lt;enumeration value="UNK"/>
 *     &lt;enumeration value="V"/>
 *     &lt;enumeration value="VIC"/>
 *     &lt;enumeration value="Waiver"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "InspectionDescriptionOpenEnumType")
@XmlEnum
public enum InspectionDescriptionOpenEnumType {

    @XmlEnumValue("Board Up")
    BOARD_UP("Board Up"),
    @XmlEnumValue("Cat Drive In")
    CAT_DRIVE_IN("Cat Drive In"),
    CATD("CATD"),
    CATF("CATF"),
    @XmlEnumValue("Commercial")
    COMMERCIAL("Commercial"),
    D("D"),
    DAP("DAP"),
    @XmlEnumValue("Drive In")
    DRIVE_IN("Drive In"),
    DRP("DRP"),
    @XmlEnumValue("DRP (Inspect & Repair)")
    DRP_INSPECT_REPAIR("DRP (Inspect & Repair)"),
    F("F"),
    FIS("FIS"),
    I("I"),
    @XmlEnumValue("Independent Inspection")
    INDEPENDENT_INSPECTION("Independent Inspection"),
    @XmlEnumValue("Inspect and Repair with Customer OK")
    INSPECT_AND_REPAIR_WITH_CUSTOMER_OK("Inspect and Repair with Customer OK"),
    @XmlEnumValue("Inspection Only")
    INSPECTION_ONLY("Inspection Only"),
    ND("ND"),
    OR("OR"),
    @XmlEnumValue("Other")
    OTHER("Other"),
    OTHR("OTHR"),
    OW("OW"),
    P("P"),
    PRO("PRO"),
    @XmlEnumValue("Property")
    PROPERTY("Property"),
    R("R"),
    @XmlEnumValue("Rental")
    RENTAL("Rental"),
    RF("RF"),
    RSP("RSP"),
    SC("SC"),
    @XmlEnumValue("Staff Inspection")
    STAFF_INSPECTION("Staff Inspection"),
    STF("STF"),
    TC("TC"),
    TPA("TPA"),
    UNK("UNK"),
    V("V"),
    VIC("VIC"),
    @XmlEnumValue("Waiver")
    WAIVER("Waiver");
    private final String value;

    InspectionDescriptionOpenEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static InspectionDescriptionOpenEnumType fromValue(String v) {
        for (InspectionDescriptionOpenEnumType c: InspectionDescriptionOpenEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
