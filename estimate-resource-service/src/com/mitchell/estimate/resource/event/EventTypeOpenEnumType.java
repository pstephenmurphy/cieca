//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.11.03 at 12:33:26 PM PST 
//


package com.mitchell.estimate.resource.event;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for EventTypeOpenEnumType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="EventTypeOpenEnumType">
 *   &lt;restriction base="{http://www.cieca.com/BMS}OpenEnum">
 *     &lt;enumeration value="Customer Communication"/>
 *     &lt;enumeration value="Insurance Communication"/>
 *     &lt;enumeration value="Parts"/>
 *     &lt;enumeration value="Payment"/>
 *     &lt;enumeration value="Production Stages"/>
 *     &lt;enumeration value="Rental Vehicle"/>
 *     &lt;enumeration value="Repair Delayed"/>
 *     &lt;enumeration value="Repair Order Transferred"/>
 *     &lt;enumeration value="Sublet"/>
 *     &lt;enumeration value="Towing"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "EventTypeOpenEnumType")
@XmlEnum
public enum EventTypeOpenEnumType {

    @XmlEnumValue("Customer Communication")
    CUSTOMER_COMMUNICATION("Customer Communication"),
    @XmlEnumValue("Insurance Communication")
    INSURANCE_COMMUNICATION("Insurance Communication"),
    @XmlEnumValue("Parts")
    PARTS("Parts"),
    @XmlEnumValue("Payment")
    PAYMENT("Payment"),
    @XmlEnumValue("Production Stages")
    PRODUCTION_STAGES("Production Stages"),
    @XmlEnumValue("Rental Vehicle")
    RENTAL_VEHICLE("Rental Vehicle"),
    @XmlEnumValue("Repair Delayed")
    REPAIR_DELAYED("Repair Delayed"),
    @XmlEnumValue("Repair Order Transferred")
    REPAIR_ORDER_TRANSFERRED("Repair Order Transferred"),
    @XmlEnumValue("Sublet")
    SUBLET("Sublet"),
    @XmlEnumValue("Towing")
    TOWING("Towing");
    private final String value;

    EventTypeOpenEnumType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static EventTypeOpenEnumType fromValue(String v) {
        for (EventTypeOpenEnumType c: EventTypeOpenEnumType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
